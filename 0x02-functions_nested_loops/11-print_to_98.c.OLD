#include "holberton.h"
#include <stdio.h>

/**
 * print_to_98 - Entry point
 *
 * Description: This function prints the numbers from n to 98
 *
 * @n: Start number of print
 *
 * Return: 
 */
void print_to_98(int n)
{
	
	int start;
	int n_div = 1;
	int n_copy = n;

	while(n_copy > 9)
	{
		n_copy = n_copy / 10;
		n_div = n_div * 10;
	}
	n_div = 1000;
	if (n > 98)
	{
		for (start = n; start >= 98; start--)
		{
			int start_copy = start;
			int n_div_copy = n_div;

			while (start_copy > 9)
			{
				if ((start_copy / n_div_copy) != 0)
				{
					_putchar((start_copy / n_div_copy) + '0');
				}
				start_copy = start_copy % n_div_copy;
				n_div_copy = n_div_copy / 10;
			}
			_putchar((start % 10) + '0');
			if(start != 98)
			{
				_putchar(',');
				_putchar(' ');
			}
		}
	}
	else if (n == 98)
	{
		_putchar('9');
		_putchar('8');
	}
	else
	{
		for (start = n; start <= 98; start++)
		{
			int start_copy = start;
			int n_div_copy = n_div;
			
			if (start_copy >= 0)
			{
				while (start_copy > 9)
				{
					if ((start_copy / n_div_copy) != 0)
					{
						_putchar((start_copy / n_div_copy) + '0');
					}
					start_copy = start_copy % n_div_copy;
					n_div_copy = n_div_copy / 10;
				}
			}
			else
			{
				_putchar('-');
				start_copy = start_copy * -1;
				while (start_copy > 9)
				{
					if ((start_copy / n_div_copy) != 0)
					{
						_putchar((start_copy / n_div_copy) + '0');
					}
					start_copy = start_copy % n_div_copy;
					n_div_copy = n_div_copy / 10;
				}
			}
			if (start >= 0)
			{
				_putchar((start % 10) + '0');
			}
			else
			{
				_putchar(((start % 10) * -1) + '0');
			}
			if(start != 98)
			{
				_putchar(',');
				_putchar(' ');
			}
		}
	}
	_putchar('\n');
}
